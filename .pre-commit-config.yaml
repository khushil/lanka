# Pre-commit hooks for LANKA project
# Install: pip install pre-commit && pre-commit install

default_language_version:
  python: python3
  node: 18.18.0

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^docs/.*\.md$
      - id: end-of-file-fixer
        exclude: ^(.*\.svg|.*\.png|.*\.jpg)$
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # JavaScript/TypeScript linting
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: npx eslint
        language: system
        types: [file]
        files: \.(js|jsx|ts|tsx)$
        exclude: ^(node_modules|dist|build|coverage)/
        
      - id: prettier
        name: Prettier
        entry: npx prettier --write
        language: system
        types: [file]
        files: \.(js|jsx|ts|tsx|json|css|scss|md|yml|yaml)$
        exclude: ^(node_modules|dist|build|coverage)/

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typecheck
        name: TypeScript Check
        entry: npx tsc --noEmit
        language: system
        pass_filenames: false
        types: [typescript]

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: ^(CHANGELOG\.md|\.github/.*\.md)$

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: ['--severity=warning']

  # Python linting (for scripts)
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3

  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--ignore=E203,W503']

  # License header check
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        name: Add license header
        files: \.(js|ts|tsx|jsx)$
        exclude: ^(node_modules|dist|build|coverage|.*\.config\.(js|ts)|.*\.test\.(js|ts)|.*\.spec\.(js|ts))/
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - //

  # Custom hooks
  - repo: local
    hooks:
      - id: check-dependencies
        name: Check Dependencies
        entry: scripts/check-dependencies.sh
        language: script
        pass_filenames: false
        
      - id: test-runner
        name: Run Unit Tests
        entry: npm test -- --passWithNoTests
        language: system
        pass_filenames: false
        stages: [push]
        
      - id: check-changelog
        name: Check CHANGELOG update
        entry: scripts/check-changelog.sh
        language: script
        pass_filenames: false
        stages: [push]
        
      - id: verify-signoff
        name: Verify commit sign-off
        entry: scripts/verify-signoff.sh
        language: script
        stages: [commit-msg]

# Configuration for specific hooks
exclude: |
  (?x)^(
    node_modules/|
    dist/|
    build/|
    coverage/|
    \.next/|
    \.cache/|
    public/|
    .*\.min\.js|
    .*\.min\.css|
    package-lock\.json|
    yarn\.lock|
    pnpm-lock\.yaml
  )

fail_fast: false
minimum_pre_commit_version: 3.0.0