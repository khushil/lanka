version: '3.8'

services:
  # LANKA UI Client
  lanka-ui:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:4000
      - REACT_APP_WEBSOCKET_URL=ws://localhost:4000
      - REACT_APP_GRAPHQL_URL=http://localhost:4000/graphql
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - lanka-api
    networks:
      - lanka-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # LANKA API Backend (placeholder for integration)
  lanka-api:
    image: node:18-alpine
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
    command: ["node", "-e", "console.log('API placeholder - replace with actual backend'); process.stdin.resume()"]
    networks:
      - lanka-network
    restart: unless-stopped

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lanka-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL for data persistence (when needed)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=lanka
      - POSTGRES_USER=lanka
      - POSTGRES_PASSWORD=lanka_password_change_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - lanka-network
    restart: unless-stopped

networks:
  lanka-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data: